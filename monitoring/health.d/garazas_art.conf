# Garazas.art Custom Health Checks

# Frontend Container Alarms
template: frontend_cpu_usage
      on: cgroup_cpu.cpu_percent
  lookup: average -10s unaligned of garazas-art_frontend
   units: %
   every: 10s
    warn: $this > 70
    crit: $this > 85
    info: CPU usage of the frontend container
   delay: up 60s down 30s
      to: sysadmin

template: frontend_ram_usage
      on: cgroup_memory.usage
  lookup: average -10s unaligned of garazas-art_frontend
   units: MB
   every: 10s
    warn: $this > 500
    crit: $this > 800
    info: RAM usage of the frontend container
   delay: up 60s down 30s
      to: sysadmin

# Backend Container Alarms
template: backend_cpu_usage
      on: cgroup_cpu.cpu_percent
  lookup: average -10s unaligned of garazas-art_backend
   units: %
   every: 10s
    warn: $this > 70
    crit: $this > 85
    info: CPU usage of the backend container
   delay: up 60s down 30s
      to: sysadmin

template: backend_ram_usage
      on: cgroup_memory.usage
  lookup: average -10s unaligned of garazas-art_backend
   units: MB
   every: 10s
    warn: $this > 500
    crit: $this > 800
    info: RAM usage of the backend container
   delay: up 60s down 30s
      to: sysadmin

# Nginx Container Alarms
template: nginx_cpu_usage
      on: cgroup_cpu.cpu_percent
  lookup: average -10s unaligned of garazas-art_nginx
   units: %
   every: 10s
    warn: $this > 60
    crit: $this > 75
    info: CPU usage of the nginx container
   delay: up 60s down 30s
      to: webmaster

# System-wide alarms
template: system_load_average
      on: system.load
  lookup: average -10m unaligned of load1
   units: load
   every: 1m
    warn: $this > (($status >= $WARNING) ? (4) : (5))
    crit: $this > (($status == $CRITICAL) ? (6) : (7))
    info: System load average (1 min), higher than normal
   delay: up 0 down 15m multiplier 1.5 max 1h
      to: sysadmin

template: disk_space_usage
      on: disk.space
  lookup: average -10m unaligned of used
   units: %
   every: 1m
    warn: $this > 80
    crit: $this > 95
    info: Disk space usage
   delay: up 1m down 15m multiplier 1.5 max 1h
      to: sysadmin

# API endpoint health
template: backend_api_health_check
      on: python.d.http_check_status
  lookup: average -5m unaligned of status_garazas-backend-health
   units: status
   every: 1m
    crit: $this != 1
    info: Backend API health check endpoint is not responding with 200 OK
   delay: down 2m multiplier 1.5 max 30m
      to: sysadmin webmaster

# Database connections (if applicable)
template: backend_db_connections
      on: python.d.mongodb_connections
  lookup: average -5m unaligned of connections
   units: connections
   every: 1m
    warn: $this > 80
    crit: $this > 95
    info: Number of database connections is too high
   delay: up 1m down 15m multiplier 1.5 max 1h
      to: dba 